// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.127.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace Naos.HubSpot.Domain.Test
{
    using global::System;
    using global::System.CodeDom.Compiler;
    using global::System.Collections.Concurrent;
    using global::System.Collections.Generic;
    using global::System.Collections.ObjectModel;
    using global::System.Diagnostics.CodeAnalysis;

    using global::FakeItEasy;

    using global::Naos.HubSpot.Domain;
    using global::Naos.HubSpot.Domain.Model;
    using global::Naos.Protocol.Domain;

    using global::OBeautifulCode.AutoFakeItEasy;
    using global::OBeautifulCode.Math.Recipes;

    /// <summary>
    /// The default (code generated) Dummy Factory.
    /// Derive from this class to add any overriding or custom registrations.
    /// </summary>
    [ExcludeFromCodeCoverage]
    [GeneratedCode("OBeautifulCode.CodeGen.ModelObject", "1.0.127.0")]
#if !NaosHubSpotSolution
    internal
#else
    public
#endif
    abstract class DefaultHubSpotDummyFactory : IDummyFactory
    {
        public DefaultHubSpotDummyFactory()
        {
            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new AddCompanyRequest(
                                 A.Dummy<IReadOnlyCollection<PropertyModel>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new AddOrUpdateContactsRequest(
                                 A.Dummy<int?>(),
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyCollection<PropertyModel>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new Company(
                                 A.Dummy<IReadOnlyDictionary<string, string>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new Contact(
                                 A.Dummy<IReadOnlyDictionary<string, string>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ContactPropertyModel(
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<int?>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<bool?>(),
                                 A.Dummy<bool?>(),
                                 A.Dummy<bool?>(),
                                 A.Dummy<bool?>(),
                                 A.Dummy<bool?>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new CreateCompanyPropertyRequest(
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new CreateContactPropertyRequest(
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new GetAllCompanyPropertiesResponse(
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<int>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new CreateAssociationRequest(
                                 A.Dummy<long>(),
                                 A.Dummy<long>(),
                                 A.Dummy<string>(),
                                 A.Dummy<int>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new DeleteContactResponse(
                                 A.Dummy<int>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new PropertyModel(
                                 A.Dummy<string>(),
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new UpdateCompanyModel(
                                 A.Dummy<long>(),
                                 A.Dummy<IReadOnlyCollection<PropertyModel>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new AssociationContactsSection(
                                 A.Dummy<AssociationResultsSection>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new AssociationResultsSection(
                                 A.Dummy<string>(),
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new AssociationResultV3(
                                 A.Dummy<string>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<string>(),
                                 A.Dummy<AssociationsAssociationsSection>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new AssociationsAssociationsSection(
                                 A.Dummy<AssociationContactsSection>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new CompanyModelV3(
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<bool>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new CompanyRequestModelV3(
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new CompanyV3(
                                 A.Dummy<IReadOnlyDictionary<string, string>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ContactModelV3(
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<bool>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ContactRequestModelV3(
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ContactV3(
                                 A.Dummy<IReadOnlyDictionary<string, string>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new NextModel(
                                 A.Dummy<string>(),
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new PagingModel(
                                 A.Dummy<PrevModel>(),
                                 A.Dummy<NextModel>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new PrevModel(
                                 A.Dummy<string>(),
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModificationMetadataModel(
                                 A.Dummy<bool>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<bool>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new OptionModel(
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<long>(),
                                 A.Dummy<bool>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new PropertyModelV3(
                                 A.Dummy<string>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<ModificationMetadataModel>(),
                                 A.Dummy<string>(),
                                 A.Dummy<long>(),
                                 A.Dummy<IReadOnlyCollection<OptionModel>>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<string>(),
                                 A.Dummy<bool>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new PropertyV3(
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new AddCompanyOp(
                                 A.Dummy<Company>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new CreateCompanyPropertyOp(
                                 A.Dummy<CreateCompanyPropertyRequest>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new CreateCompanyV3Op(
                                 A.Dummy<CompanyV3>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new GetAllCompaniesV3Op());

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new GetSingleCompanyByHubSpotIdV3Op(
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new RemoveCompanyByHubSpotIdV3Op(
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new SearchCompanyV3());

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new UpdateCompanyV3Op(
                                 A.Dummy<CompanyV3>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new AssociateContactWithCompanyV3Op(
                                 A.Dummy<string>(),
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new CreateContactV3Op(
                                 A.Dummy<ContactV3>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new GetAllContactsV3Op());

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new GetSingleContactByHubSpotIdV3Op(
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new RemoveContactByHubSpotIdV3Op(
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new SearchContactV3());

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new UpdateContactV3Op(
                                 A.Dummy<ContactV3>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new CreatePropertyV3Op(
                                 A.Dummy<PropertyV3>(),
                                 A.Dummy<HubSpotPropertyObjectType>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new GetAllPropertiesV3Op());

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new RemovePropertyV3Op(
                                 A.Dummy<string>(),
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new DeleteCompanyOp(
                                 A.Dummy<long>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new DeleteCompanyPropertyOp(
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new GetAllCompaniesOp(
                                 A.Dummy<IReadOnlyCollection<string>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new GetAllCompanyPropertiesOp());

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new UpdateCompaniesOp(
                                 A.Dummy<IReadOnlyCollection<Company>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new AddOrUpdateContactsOp(
                                 A.Dummy<IReadOnlyCollection<Contact>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new CreateContactPropertyOp(
                                 A.Dummy<CreateContactPropertyRequest>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new DeleteContactPropertyOp(
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new DeleteContactOp(
                                 A.Dummy<int>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new GetAllContactPropertiesOp());

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new GetAllContactsOp(
                                 A.Dummy<IReadOnlyCollection<string>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new AssociateContactWithCompanyOp(
                                 A.Dummy<long>(),
                                 A.Dummy<long>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new SyncWithHubSpotOp());
        }

        /// <inheritdoc />
        public Priority Priority => new FakeItEasy.Priority(1);

        /// <inheritdoc />
        public bool CanCreate(Type type)
        {
            return false;
        }

        /// <inheritdoc />
        public object Create(Type type)
        {
            return null;
        }
    }
}