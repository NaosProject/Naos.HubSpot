// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.128.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace Naos.HubSpot.Domain.Test
{
    using global::System;
    using global::System.CodeDom.Compiler;
    using global::System.Collections.Concurrent;
    using global::System.Collections.Generic;
    using global::System.Collections.ObjectModel;
    using global::System.Diagnostics.CodeAnalysis;

    using global::FakeItEasy;

    using global::Naos.HubSpot.Domain;
    using global::Naos.HubSpot.Domain.Model;
    using global::Naos.Protocol.Domain;

    using global::OBeautifulCode.AutoFakeItEasy;
    using global::OBeautifulCode.Math.Recipes;

    /// <summary>
    /// The default (code generated) Dummy Factory.
    /// Derive from this class to add any overriding or custom registrations.
    /// </summary>
    [ExcludeFromCodeCoverage]
    [GeneratedCode("OBeautifulCode.CodeGen.ModelObject", "1.0.128.0")]
#if !NaosHubSpotSolution
    internal
#else
    public
#endif
    abstract class DefaultHubSpotDummyFactory : IDummyFactory
    {
        public DefaultHubSpotDummyFactory()
        {
            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new AssociationContactsSection(
                                 A.Dummy<AssociationResultsSection>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new AssociationResultsSection(
                                 A.Dummy<string>(),
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new AssociationResult(
                                 A.Dummy<string>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<string>(),
                                 A.Dummy<AssociationsAssociationsSection>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new AssociationsAssociationsSection(
                                 A.Dummy<AssociationContactsSection>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new CompanyModel(
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<bool>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new CompanyRequestModel(
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new Company(
                                 A.Dummy<IReadOnlyDictionary<string, string>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ContactModel(
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>(),
                                 A.Dummy<bool>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ContactRequestModel(
                                 A.Dummy<string>(),
                                 A.Dummy<IReadOnlyDictionary<string, string>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new Contact(
                                 A.Dummy<IReadOnlyDictionary<string, string>>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new NextModel(
                                 A.Dummy<string>(),
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new PagingModel(
                                 A.Dummy<PrevModel>(),
                                 A.Dummy<NextModel>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new PrevModel(
                                 A.Dummy<string>(),
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new ModificationMetadataModel(
                                 A.Dummy<bool>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<bool>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new OptionModel(
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<long>(),
                                 A.Dummy<bool>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new PropertyModel(
                                 A.Dummy<string>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<ModificationMetadataModel>(),
                                 A.Dummy<string>(),
                                 A.Dummy<long>(),
                                 A.Dummy<IReadOnlyCollection<OptionModel>>(),
                                 A.Dummy<string>(),
                                 A.Dummy<string>(),
                                 A.Dummy<bool>(),
                                 A.Dummy<string>(),
                                 A.Dummy<bool>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new PropModel(
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new CreateCompanyOp(
                                 A.Dummy<Company>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new GetAllCompaniesOp());

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new GetSingleCompanyByHubSpotIdOp(
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new RemoveCompanyByHubSpotIdOp(
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new SearchCompany());

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new UpdateCompanyOp(
                                 A.Dummy<Company>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new AssociateContactWithCompanyOp(
                                 A.Dummy<string>(),
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new CreateContactOp(
                                 A.Dummy<Contact>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new GetAllContactsOp());

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new GetSingleContactByHubSpotIdOp(
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new RemoveContactByHubSpotIdOp(
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new SearchContactOp());

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new UpdateContactOp(
                                 A.Dummy<Contact>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new CreatePropertyV3Op(
                                 A.Dummy<PropModel>(),
                                 A.Dummy<HubSpotPropertyObjectType>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new GetAllPropertiesV3Op());

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new RemovePropertyV3Op(
                                 A.Dummy<string>(),
                                 A.Dummy<string>()));

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () => new SyncWithHubSpotOp());
        }

        /// <inheritdoc />
        public Priority Priority => new FakeItEasy.Priority(1);

        /// <inheritdoc />
        public bool CanCreate(Type type)
        {
            return false;
        }

        /// <inheritdoc />
        public object Create(Type type)
        {
            return null;
        }
    }
}